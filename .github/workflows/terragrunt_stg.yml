name: 'Terragrunt STG'
on:
  pull_request:
    paths:
      - 'terragrunt/stg/**'
      - '_shared/modules/local'

env:
  tf_version: '1.5.7'
  tg_version: '0.48.0'
  working_dir: 'terragrunt/stg'
  TF_TOKEN_zetta_scalr_io: ${{ secrets.SCALR_TOKEN }}
  COMMENT_TITLE: Scalr Stg Plan

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v1
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

  plan:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      checks: write
      pull-requests: write
    needs: [ checks ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@v1
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'plan'

      - name: Extract Plan URL
        id: extract
        run: |
          printf "%s" "$PLAN_OUTPUT" > .temp-output
          url=$(sed -n "s/.*\(http[s]*:\/\/[^ %\"\)\('>]*\).*/\1/p" .temp-output)
          echo "url=$url" >> "$GITHUB_OUTPUT"
        env:
          PLAN_OUTPUT: ${{ steps.plan.outputs.tg_action_output }}

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ${{ env.COMMENT_TITLE }}

      - name: Comment the URL of the plan
        uses: peter-evans/create-or-update-comment@v2
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### ${{ env.COMMENT_TITLE }}
            :notebook: Terraform Plan: ${{ steps.extract.outputs.url }}
          edit-mode: replace

  deploy:
    runs-on: ubuntu-latest
    needs: [ plan ]
    environment: 'stg'
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v1
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'apply'
